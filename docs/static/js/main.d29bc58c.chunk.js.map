{"version":3,"sources":["components/partials/instruments/Guitar/Fret.module.scss","components/partials/Options.module.scss","components/partials/MainAppBar.module.scss","components/partials/FloatingActionButtons.module.scss","App.module.scss","constants/types.js","reducers/AlternativeSelectionsReducer.js","reducers/ChordsReducer.js","reducers/ComputerKeyboardInputEnabledReducer.js","reducers/GuitarTunersReducer.js","reducers/IntervalsReducer.js","reducers/KeyCodeNoteNumbersReducer.js","reducers/LabelsReducer.js","reducers/NotesReducer.js","reducers/ScalesReducer.js","reducers/SelectedChordNameReducer.js","reducers/SelectedKeyNumberReducer.js","reducers/SelectedLabelReducer.js","reducers/SelectedScaleNameReducer.js","reducers/SelectedSelectionTypeReducer.js","reducers/SelectionTypesReducer.js","reducers/SettingsGuitarReducer.js","reducers/SettingsKeyboardReducer.js","reducers/SynthesizerReducer.js","reducers/index.js","utils/configureStore.js","actions/NotesActions.js","helpers/noteHelpers.js","actions/SelectedSelectionNameActions.js","components/partials/Note.js","components/partials/instruments/Guitar/Fret.js","components/partials/instruments/Guitar.js","actions/GuitarTunersActions.js","components/partials/instruments/Keyboard/KeyboardKey.js","components/partials/instruments/Keyboard.js","components/routes/Home.js","components/routes/NotFound.js","components/partials/Selection.js","actions/SelectedKeyNumberActions.js","actions/ComputerKeyboardInputEnabledActions.js","components/partials/Options.js","actions/SelectedSelectionTypeActions.js","actions/SelectedLabelActions.js","actions/SettingsGuitarActions.js","actions/SettingsKeyboardActions.js","components/partials/AlternativeSelections.js","assets/svg/flowchord-logo-white.svg","components/partials/MainAppBar.js","assets/svg/flowchord-logo-gray-vertical.svg","components/partials/Footer.js","components/outputAudio/Synthesizer.js","components/partials/FloatingActionButtons.js","components/inputControllers/ComputerKeyboardInput.js","theme.js","App.js","serviceWorker.js","index.js","components/partials/instruments/Guitar.module.scss","components/partials/Selection.module.scss","components/partials/Note.module.scss","components/partials/instruments/Keyboard/KeyboardKey.module.scss","components/partials/Footer.module.scss","components/partials/instruments/Keyboard.module.scss","components/partials/AlternativeSelections.module.scss"],"names":["module","exports","SELECT_NOTE","DESELECT_NOTE","TOGGLE_SELECTED_NOTES","UPDATE_CHORDS","UPDATE_SCALES","UPDATE_ALTERNATIVE_SELECTIONS","UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED","UPDATE_SELECTED_CHORD_NAME","UPDATE_SELECTED_KEY_NUMBER","UPDATE_SELECTED_LABEL","UPDATE_SELECTED_SCALE_NAME","UPDATE_SELECTED_SELECTION_TYPE","UPDATE_SETTINGS_GUITAR","UPDATE_SETTINGS_KEYBOARD","UPDATE_TUNER_NUMBER","initialState","reducer","state","action","type","payload","Tone","toDestination","reducers","history","combineReducers","router","connectRouter","alternativeSelections","AlternativeSelectionsReducer","chords","ChordsReducer","computerKeyboardInputEnabled","ComputerKeyboardInputEnabledReducer","guitarTuners","GuitarTunersReducer","intervals","IntervalsReducer","keyCodeNoteNumbers","KeyCodeNoteNumbersReducer","labels","LabelsReducer","notes","NotesReducer","scales","ScalesReducer","selectedChordName","SelectedChordNameReducer","selectedKeyNumber","SelectedKeyNumberReducer","selectedLabel","SelectedLabelReducer","selectedScaleName","SelectedScaleNameReducer","selectedSelectionType","SelectedSelectionTypeReducer","selectionTypes","SelectionTypesReducer","settingsGuitar","SettingsGuitarReducer","settingsKeyboard","SettingsKeyboardReducer","synthesizer","SynthesizerReducer","createBrowserHistory","composeEnhancers","composeWithDevTools","toggleNote","noteNumber","checked","dispatch","getState","newNotes","selected","getNoteByNoteNumber","find","note","number","noteNumberToHalfSteps","selectedNoteSelection","relativeNoteNumber","Object","keys","length","halfSteps","halfStep","sortNumber","a","b","getMatchedSelections","noteSelections","relativeParsedHalfSteps","isSelectedKey","selectedSelectionName","filter","noteSelectionName","noteSelection","isEqualSelection","parsedHalfSteps","every","parsedHalfStep","index","getSelectionFromName","selection","selectionName","getAlternativeSelections","single","selectedHalfSteps","relativeKeyIndex","keyIndex","map","relativeParsedHalfStep","sort","join","parseInt","matchedSelections","matchedSelection","alternativeSelection","push","removeCustomSelection","custom","newNoteSelections","updateSelectedSelectionNameFromNotes","selectedNoteNumbers","getSelectedNoteNumbersFromNotes","noteNumbers","noteNumbersToHalfSteps","element","getMatchedSelection","alternativeSelectionsToAlternativeSelection","addCustomSelection","Note","keyNumber","this","props","name","keyName","getKeyName","interval","getInterval","className","style","Button","color","disableElevation","variant","onClick","event","handleNoteOnClick","button","notSelected","keyColor","label","Component","mapDispatchToProps","connect","Fret","fretNumber","tunerNumber","getKeyNumber","fret","Guitar","stringNumber","updateTunerNumber","tuner","optionElements","MenuItem","value","Select","tunerSelect","onChange","handleTunerChange","target","numberOfFrets","fretNumbers","fretnumber","frets","firstFret","string","renderFrets","show","id","guitar","active","instrumentView","fretboard","tuners","renderTunerElements","renderFretNumbers","renderGuitarNeck","newGuitarTuners","updateGuitarTuners","KeyboardKey","lowestNote","keycolor","keyboardKey","Keyboard","numberOfKeys","keyboard","renderKeys","Home","NotFound","Selection","updateSelectedSelectionSelectList","chordName","scaleName","FormControl","formControl","InputLabel","select","labelId","handleKeyChange","renderKeyOptions","wide","Autocomplete","newValue","handleChordChange","onFocus","updateComputerKeyboardInputEnabled","onBlur","options","renderInput","params","TextField","input","handleScaleChange","updateSelectedKeyNumber","updateSelectedChordName","updateSelectedScaleName","relativeHalfSteps","halfStepsToNoteNumber","halfStepsToNoteNumbers","includes","enabled","Options","selectionType","updateSelectedSelectionType","updateSelectedLabel","newSettingsGuitar","updateSettingsGuitar","newSettingsKeyboard","updateSettingsKeyboard","Fragment","List","subheader","ListSubheader","ListItem","fullWidth","handleSelectionTypeChange","renderSelectionTypeOptions","handleLabelChange","renderLabelOptions","Divider","ListItemText","primary","ListItemSecondaryAction","Switch","edge","handleToggleGuitar","inputProps","Collapse","in","timeout","unmountOnExit","handleNumberOfFretsChange","min","max","InputLabelProps","shrink","handleToggleKeyboard","handleNumberOfKeysChange","handleLowestNoteChange","renderLowestNoteOptions","AlternativeSelections","isListOpen","anchorEl","showSnackbar","listId","handleListOpen","bind","handleListClose","handleSnackbarClose","prevProps","hasAlternativeSelections","setState","setAnchorEl","currentTarget","reason","updateSelectedSelectionFromAlternativeSelectionList","handleListMenuItemClick","anchorOrigin","vertical","horizontal","getContentAnchorEl","keepMounted","transformOrigin","open","onClose","renderAlternativeSelectionsListItems","IconButton","Badge","badgeContent","overlap","fontSize","Snackbar","autoHideDuration","message","snackbarMessage","size","renderAlternativeSelectionsList","selectedAlternativeSelection","prevSelectedKeyNumber","prevSelectedSelectionName","prevSelection","newAlternativeSelections","MainAppBar","isDrawerOpen","handleDrawerOpen","handleDrawerClose","AppBar","position","Toolbar","src","FlowChordLogo","alt","appBarLogo","SwipeableDrawer","anchor","onOpen","footer","logo","text","href","Synthesizer","playSelection","rootOctave","relativeHalfStep","octave","selectedSelections","selectedNotesTriggerNames","getSelectedNotesTriggerNames","now","triggerAttackRelease","forEach","selectedNotesTriggerName","noteStart","Fab","FloatingActionButtons","floatingActionButtons","ComputerKeyboardInput","keyDownFunction","document","addEventListener","removeEventListener","keyCode","handleNoteToggle","theme","createTheme","palette","main","secondary","background","default","overrides","MuiAppBar","colorPrimary","backgroundColor","WebFont","load","google","families","store","preloadedState","middleware","thunk","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","App","CssBaseline","ThemeProvider","app","exact","path","render","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d29bc58c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fret\":\"Fret_fret__3zoc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__3sihV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBarLogo\":\"MainAppBar_appBarLogo__by6Ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingActionButtons\":\"FloatingActionButtons_floatingActionButtons__272xk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","export const SELECT_NOTE = 'SELECT_NOTE';\nexport const DESELECT_NOTE = 'DESELECT_NOTE';\nexport const TOGGLE_SELECTED_NOTES = 'TOGGLE_SELECTED_NOTES';\nexport const UPDATE_CHORDS = 'UPDATE_CHORDS';\nexport const UPDATE_SCALES = 'UPDATE_SCALES';\nexport const UPDATE_ALTERNATIVE_SELECTIONS = 'UPDATE_ALTERNATIVE_SELECTIONS';\nexport const UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED = 'UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED';\nexport const UPDATE_SELECTED_CHORD_NAME = 'UPDATE_SELECTED_CHORD_NAME';\nexport const UPDATE_SELECTED_KEY_NUMBER = 'UPDATE_SELECTED_KEY_NUMBER';\nexport const UPDATE_SELECTED_LABEL = 'UPDATE_SELECTED_LABEL';\nexport const UPDATE_SELECTED_SCALE_NAME = 'UPDATE_SELECTED_SCALE_NAME';\nexport const UPDATE_SELECTED_SELECTION_TYPE = 'UPDATE_SELECTED_SELECTION_TYPE';\nexport const UPDATE_SETTINGS_GUITAR = 'UPDATE_SETTINGS_GUITAR';\nexport const UPDATE_SETTINGS_KEYBOARD = 'UPDATE_SETTINGS_KEYBOARD';\nexport const UPDATE_TUNER_NUMBER = 'UPDATE_TUNER_NUMBER';\n","import { UPDATE_ALTERNATIVE_SELECTIONS } from 'constants/types';\n\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ALTERNATIVE_SELECTIONS:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { UPDATE_CHORDS } from 'constants/types';\n\nimport chords from 'data/chords.json';\n\nconst initialState = chords;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CHORDS:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED } from 'constants/types';\n\nconst initialState = true;\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import { UPDATE_TUNER_NUMBER } from 'constants/types';\nimport guitarTuners from 'data/guitar-tuners.json';\n\nconst initialState = guitarTuners;\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_TUNER_NUMBER:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import intervals from 'data/intervals.json';\n\nconst initialState = intervals;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import keyCodeNoteNumbers from 'data/keyCodeNoteNumbers.json';\n\nconst initialState = keyCodeNoteNumbers;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import labels from 'data/labels.json';\n\nconst initialState = labels;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import {\n  SELECT_NOTE,\n  DESELECT_NOTE,\n  TOGGLE_SELECTED_NOTES\n} from 'constants/types';\n\nimport notes from 'data/notes.json';\n\nconst initialState = notes;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_NOTE:\n      return action.payload;\n    case DESELECT_NOTE:\n      return action.payload;\n    case TOGGLE_SELECTED_NOTES:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { UPDATE_SCALES } from 'constants/types';\n\nimport scales from 'data/scales.json';\n\nconst initialState = scales;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SCALES:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { UPDATE_SELECTED_CHORD_NAME } from 'constants/types';\n\nconst initialState = '';\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_CHORD_NAME:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { UPDATE_SELECTED_KEY_NUMBER } from 'constants/types';\n\nconst initialState = 0;\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_KEY_NUMBER:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { UPDATE_SELECTED_LABEL } from 'constants/types';\n\nconst initialState = 'key';\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_LABEL:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { UPDATE_SELECTED_SCALE_NAME } from 'constants/types';\n\nconst initialState = '';\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_SELECTED_SCALE_NAME:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { UPDATE_SELECTED_SELECTION_TYPE } from 'constants/types';\n\nconst initialState = \"chord\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SELECTED_SELECTION_TYPE:\n\t\t\treturn action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import selectionTypes from 'data/selection-types.json';\n\nconst initialState = selectionTypes;\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { UPDATE_SETTINGS_GUITAR } from 'constants/types';\n\nimport settingsGuitar from 'data/settings-guitar.json';\n\nconst initialState = settingsGuitar;\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_SETTINGS_GUITAR:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { UPDATE_SETTINGS_KEYBOARD } from 'constants/types';\n\nimport settingsKeyboard from 'data/settings-keyboard.json';\n\nconst initialState = settingsKeyboard;\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase UPDATE_SETTINGS_KEYBOARD:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import * as Tone from 'tone';\n\nconst initialState = new Tone.PolySynth(Tone.Synth).toDestination();;\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","// Dependencies\nimport {combineReducers} from 'redux';\nimport {connectRouter} from 'connected-react-router';\n\n// Reducers\nimport AlternativeSelectionsReducer from 'reducers/AlternativeSelectionsReducer';\nimport ChordsReducer from 'reducers/ChordsReducer';\nimport ComputerKeyboardInputEnabledReducer from 'reducers/ComputerKeyboardInputEnabledReducer';\nimport GuitarTunersReducer from 'reducers/GuitarTunersReducer';\nimport IntervalsReducer from 'reducers/IntervalsReducer';\nimport KeyCodeNoteNumbersReducer from 'reducers/KeyCodeNoteNumbersReducer';\nimport LabelsReducer from 'reducers/LabelsReducer';\nimport NotesReducer from 'reducers/NotesReducer';\nimport ScalesReducer from 'reducers/ScalesReducer';\nimport SelectedChordNameReducer from 'reducers/SelectedChordNameReducer';\nimport SelectedKeyNumberReducer from 'reducers/SelectedKeyNumberReducer';\nimport SelectedLabelReducer from 'reducers/SelectedLabelReducer';\nimport SelectedScaleNameReducer from 'reducers/SelectedScaleNameReducer';\nimport SelectedSelectionTypeReducer from 'reducers/SelectedSelectionTypeReducer';\nimport SelectionTypesReducer from 'reducers/SelectionTypesReducer';\nimport SettingsGuitarReducer from 'reducers/SettingsGuitarReducer';\nimport SettingsKeyboardReducer from 'reducers/SettingsKeyboardReducer';\nimport SynthesizerReducer from 'reducers/SynthesizerReducer';\n\nconst reducers = history => combineReducers({\n  router: connectRouter(history),\n  alternativeSelections: AlternativeSelectionsReducer,\n  chords: ChordsReducer,\n  computerKeyboardInputEnabled: ComputerKeyboardInputEnabledReducer,\n  guitarTuners: GuitarTunersReducer,\n  intervals: IntervalsReducer,\n  keyCodeNoteNumbers: KeyCodeNoteNumbersReducer,\n  labels: LabelsReducer,\n  notes: NotesReducer,\n  scales: ScalesReducer,\n  selectedChordName: SelectedChordNameReducer,\n  selectedKeyNumber: SelectedKeyNumberReducer,\n  selectedLabel: SelectedLabelReducer,\n  selectedScaleName: SelectedScaleNameReducer,\n  selectedSelectionType: SelectedSelectionTypeReducer,\n  selectionTypes: SelectionTypesReducer,\n  settingsGuitar: SettingsGuitarReducer,\n  settingsKeyboard: SettingsKeyboardReducer,\n  synthesizer: SynthesizerReducer\n});\n\nexport default reducers;\n","// Dependencies\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\n// Reducers\nimport createRootReducer from 'reducers';\n\n\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunk];\n  const history = createBrowserHistory();\n  const store = createStore(\n\t\tcreateRootReducer(history),\n\t\tpreloadedState,\n\t\tcomposeEnhancers(\n\t\t\tapplyMiddleware(\n\t\t\t\t...middleware,\n\t\t\t\trouterMiddleware(history)\n\t\t\t)\n\t\t)\n\t);\n  return store;\n}\n","import {SELECT_NOTE, DESELECT_NOTE} from 'constants/types';\n\nexport const toggleNote = (noteNumber, checked) => (dispatch, getState) => {\n  const notes = getState() && getState().notes;\n  let newNotes = [...notes];\n  newNotes[noteNumber].selected = checked;\n  dispatch({type: checked ? SELECT_NOTE : DESELECT_NOTE, payload: newNotes});\n  return newNotes;\n}\n","export const getNoteByNoteNumber = (notes, noteNumber) => {\n  return notes.find(note => {\n    return note.number === noteNumber;\n  })\n}\n\nexport const noteNumberToHalfSteps = (noteNumber, selectedKeyNumber, selectedNoteSelection) => {\n  const relativeNoteNumber =  (noteNumber - selectedKeyNumber) % 12 >= 0 ? (noteNumber - selectedKeyNumber) % 12 : (12 + noteNumber - selectedKeyNumber) % 12;\n  const relativeNoteNumberInSelection = selectedNoteSelection && Object.keys(selectedNoteSelection)?.length \n  ? selectedNoteSelection.halfSteps.find(halfStep => {\n    return halfStep % 12 === relativeNoteNumber;\n  }) : null;\n  return relativeNoteNumberInSelection || relativeNoteNumber;\n} \n\nexport const noteNumbersToHalfSteps = (noteNumbers, selectedKeyNumber) => {\n  return noteNumbers.map(noteNumber => {\n    return noteNumberToHalfSteps(noteNumber, selectedKeyNumber);\n  });\n}\n\nexport const halfStepsToNoteNumber = (halfStep, selectedKeyNumber) => {\n  return (halfStep + selectedKeyNumber) % 12;\n}\n\nexport const halfStepsToNoteNumbers = (halfSteps, selectedKeyNumber) => {\n  return halfSteps.map(halfStep => {\n    return halfStepsToNoteNumber(halfStep, selectedKeyNumber);\n  });\n}\n\nexport const getSelectedNoteNumbersFromNotes = notes => {\n  return notes.filter(note => {\n    return note.selected;\n  }).map(note => {\n    return note.number;\n  });\n}\n\nexport const getSelectedNotes = notes => {\n  return notes.filter(note => {\n    return note.selected;\n  });\n}\n","import {\n  UPDATE_CHORDS,\n  UPDATE_SCALES,\n  UPDATE_SELECTED_CHORD_NAME,\n\tUPDATE_SELECTED_SCALE_NAME,\n\tUPDATE_SELECTED_KEY_NUMBER,\n\tUPDATE_ALTERNATIVE_SELECTIONS,\n\tTOGGLE_SELECTED_NOTES\n} from 'constants/types';\n\n\n// Helpers\nimport {\n  getSelectedNoteNumbersFromNotes,\n  getNoteByNoteNumber,\n  noteNumbersToHalfSteps,\n\thalfStepsToNoteNumbers\n} from 'helpers/noteHelpers.js';\n\nconst sortNumber = (a, b) => {\n  return a - b;\n}\n\nconst getMatchedSelection = (noteSelections, selectedHalfSteps) => {\n  return Object.keys(noteSelections).find(noteSelectionName => {\n    const noteSelection = noteSelections[noteSelectionName];\n    return noteSelection.parsedHalfSteps.length === selectedHalfSteps.length && noteSelection.parsedHalfSteps.every((element, index) => {\n      return element === selectedHalfSteps[index];\n    });\n  });\n}\n\nconst getMatchedSelections = (noteSelections, relativeParsedHalfSteps, isSelectedKey, selectedSelectionName) => {\n  return Object.keys(noteSelections).filter(noteSelectionName => {\n    const noteSelection = noteSelections[noteSelectionName];\n    const isEqualSelection = isSelectedKey && selectedSelectionName === noteSelectionName;\n    const isMatchedSelection = noteSelection.parsedHalfSteps.length === relativeParsedHalfSteps.length && noteSelection.parsedHalfSteps.every((parsedHalfStep, index) => {\n      return parsedHalfStep === relativeParsedHalfSteps[index];\n    });\n    const isSelectedChord = isSelectedKey && isEqualSelection;\n    return isMatchedSelection && !isSelectedChord;\n  });\n}\n\nconst getSelectionFromName = (selection, selectionName) => {\n  return selection[selectionName];\n}\n\nconst getAlternativeSelections = (single = false, notes, noteSelections, selectedKeyNumber, selectedHalfSteps, selectedSelectionName) => {\n  let alternativeSelections = [];\n  for (var keyIndex in notes) {\n    let relativeKeyIndex = keyIndex - selectedKeyNumber;\n    let relativeParsedHalfSteps = selectedHalfSteps.map(parsedHalfStep => {\n      let relativeParsedHalfStep = parsedHalfStep - relativeKeyIndex;\n      relativeParsedHalfStep = relativeParsedHalfStep >= 0 ? relativeParsedHalfStep : relativeParsedHalfStep + 12;\n      return relativeParsedHalfStep % 12;\n    });\n    relativeParsedHalfSteps.sort(sortNumber).join(',');\n      const isSelectedKey = parseInt(keyIndex) === selectedKeyNumber\n      const matchedSelections = getMatchedSelections(noteSelections, relativeParsedHalfSteps, isSelectedKey, selectedSelectionName);\n      for (const matchedSelection of matchedSelections) {\n        if (matchedSelections) {\n          const alternativeSelection = {\n            note: notes[keyIndex],\n            selection: getSelectionFromName(noteSelections, matchedSelection),\n            selectionName: matchedSelection\n          };\n          if (single) return alternativeSelection;\n          else alternativeSelections.push(alternativeSelection);\n        }\n      }\n  }\n  return single ? null : alternativeSelections;\n}\n\nexport const updateSelectedChordName = selectedChordName => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_CHORD_NAME,\n    payload: selectedChordName\n  })\n}\n\nexport const updateSelectedScaleName = selectedScaleName => dispatch => {\n  dispatch({type: UPDATE_SELECTED_SCALE_NAME, payload: selectedScaleName})\n}\n\nexport const updateSelectedSelectionFromAlternativeSelectionList = (alternativeSelections, selectedAlternativeSelection, selectedSelectionType, prevSelectedKeyNumber, prevSelectedSelectionName, noteSelections, notes) => dispatch => {\n  const prevSelection = {\n    note: getNoteByNoteNumber(notes, prevSelectedKeyNumber),\n    selection: getSelectionFromName(noteSelections, prevSelectedSelectionName),\n    selectionName: prevSelectedSelectionName\n  };\n\n  const selectedKeyNumber = selectedAlternativeSelection.note.number;\n  const selectedSelectionName = selectedAlternativeSelection.selectionName;\n\n  let newAlternativeSelections = alternativeSelections.filter(alternativeSelection => {\n    const isSelectedSelection = alternativeSelection.note.number === selectedKeyNumber && alternativeSelection.selectionName === selectedSelectionName;\n    return !isSelectedSelection;\n  });\n  newAlternativeSelections.push(prevSelection);\n\n\tdispatch({\n\t\ttype: UPDATE_SELECTED_KEY_NUMBER,\n\t\tpayload: selectedKeyNumber\n\t});\n\tdispatch({\n\t\ttype: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n\t\tpayload: selectedSelectionName\n\t});\n  dispatch({\n    type: UPDATE_ALTERNATIVE_SELECTIONS,\n    payload: newAlternativeSelections\n  });\n}\n\nexport const updateSelectedSelectionSelectList = (notes, selectedKeyNumber, selectedSelectionName, noteSelections, selectedSelectionType) => dispatch => {\n  if (selectedSelectionName && selectedSelectionName.length){\n    const halfSteps = noteSelections[selectedSelectionName].parsedHalfSteps;\n  \tconst relativeHalfSteps = halfStepsToNoteNumbers(halfSteps, selectedKeyNumber);\n  \trelativeHalfSteps.sort(sortNumber).join(',');\n  \tconst newNotes = notes.map(note => {\n  \t\treturn {...note, selected: relativeHalfSteps.includes(note.number)}\n  \t});\n  \tdispatch({\n  \t\ttype: TOGGLE_SELECTED_NOTES,\n  \t\tpayload: newNotes\n  \t});\n\n    const alternativeSelections = getAlternativeSelections(false, notes, noteSelections, selectedKeyNumber, halfSteps, selectedSelectionName);\n    dispatch({\n      type: UPDATE_ALTERNATIVE_SELECTIONS,\n      payload: alternativeSelections\n    });\n  }\n\n\tif (selectedSelectionType === 'key'){\n\t\tdispatch({\n\t\t\ttype: UPDATE_SELECTED_KEY_NUMBER,\n\t\t\tpayload: selectedKeyNumber\n\t\t});\n\t}else {\n\t\tdispatch({\n\t\t\ttype: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n\t\t\tpayload: selectedSelectionName\n\t\t});\n    if(noteSelections.custom){\n      const newNoteSelections = removeCustomSelection(noteSelections);\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n        payload: newNoteSelections\n      });\n    }\n\t}\n}\n\nconst addCustomSelection = (noteSelections, selectedHalfSteps) =>{\n  return {\n    ...noteSelections,\n    custom: {\n      halfSteps: selectedHalfSteps,\n      parsedHalfSteps: selectedHalfSteps\n    }\n  };\n}\n\nconst removeCustomSelection = noteSelections =>{\n  if (noteSelections.custom){\n      let newNoteSelections = {...noteSelections};\n      delete newNoteSelections[\"custom\"];\n    \treturn newNoteSelections;\n  }else {\n    return noteSelections;\n  }\n}\n\n\nexport const updateSelectedSelectionNameFromNotes = (notes, selectedKeyNumber, noteSelections, selectedSelectionType) => dispatch => {\n  const selectedNoteNumbers = getSelectedNoteNumbersFromNotes(notes);\n  let selectedHalfSteps = noteNumbersToHalfSteps(selectedNoteNumbers, selectedKeyNumber);\n  selectedHalfSteps.sort(sortNumber).join(',');\n  const matchedSelection = getMatchedSelection(noteSelections, selectedHalfSteps);\n  if (matchedSelection) {\n    const selectedSelectionName = matchedSelection;\n\t\tconst alternativeSelections = getAlternativeSelections(false, notes, noteSelections, selectedKeyNumber, selectedHalfSteps, selectedSelectionName);\n    dispatch({\n      type: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n      payload: matchedSelection\n    });\n\t\tdispatch({\n\t\t\ttype: UPDATE_ALTERNATIVE_SELECTIONS,\n\t\t\tpayload: alternativeSelections\n\t\t});\n    if(noteSelections.custom){\n      const newNoteSelections = removeCustomSelection(noteSelections);\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n        payload: newNoteSelections\n      });\n    }\n  }else {\n\t\tconst alternativeSelection = getAlternativeSelections(true, notes, noteSelections, selectedKeyNumber, selectedHalfSteps);\n\t\tif (alternativeSelection){\n      const selectedSelectionName = alternativeSelection.selectionName;\n\t\t\tconst alternativeSelectionsToAlternativeSelection = getAlternativeSelections(false, notes, noteSelections, alternativeSelection.note.number, alternativeSelection.selection.parsedHalfSteps, selectedSelectionName);\n\t\t\tdispatch({\n\t      type: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n\t      payload: alternativeSelection.selectionName\n\t    });\n\t\t\tdispatch({\n\t      type: UPDATE_SELECTED_KEY_NUMBER,\n\t      payload: alternativeSelection.note.number\n\t    });\n\t\t\tdispatch({\n\t      type: UPDATE_ALTERNATIVE_SELECTIONS,\n\t      payload: alternativeSelectionsToAlternativeSelection\n\t    });\n      if(noteSelections.custom){\n        const newNoteSelections = removeCustomSelection(noteSelections);\n        dispatch({\n          type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n          payload: newNoteSelections\n        });\n      }\n\t\t} else {\n      const newNoteSelections = addCustomSelection(noteSelections, selectedHalfSteps, selectedSelectionType);\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SCALES : UPDATE_CHORDS,\n        payload: newNoteSelections\n      });\n      dispatch({\n\t      type: UPDATE_ALTERNATIVE_SELECTIONS,\n\t      payload: []\n\t    });\n      dispatch({\n        type: selectedSelectionType === 'scale' ? UPDATE_SELECTED_SCALE_NAME : UPDATE_SELECTED_CHORD_NAME,\n        payload: 'custom'\n      });\n    }\n\t}\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport Button from '@material-ui/core/Button';\n\n// Actions\nimport {toggleNote} from 'actions/NotesActions';\nimport {updateSelectedSelectionNameFromNotes} from 'actions/SelectedSelectionNameActions';\n\n// Helpers\nimport {noteNumberToHalfSteps} from 'helpers/noteHelpers';\n\n// Stylesheets\nimport style from 'components/partials/Note.module.scss';\n\nclass Note extends Component {\n\tgetKeyName(keyNumber){\n\t\treturn this.props.notes[keyNumber].name;\n\t}\n\n  getInterval(halfSteps){\n\t\treturn this.props.intervals[halfSteps];\n\t}\n\n  handleNoteOnClick(checked, noteNumber, selectedKeyNumber, noteSelections, selectedSelectionType){\n    const newNotes = this.props.toggleNote(noteNumber, checked);\n    this.props.updateSelectedSelectionNameFromNotes(newNotes, selectedKeyNumber, noteSelections, selectedSelectionType);\n  }\n\n  render() {\n    const noteSelections = this.props.selectedSelectionType === 'scale' ? this.props.scales : this.props.chords;\n    const selectedSelectionName = this.props.selectedSelectionType === 'scale' ? this.props.selectedScaleName : this.props.selectedChordName;\n    const selectedNoteSelection = noteSelections[selectedSelectionName];\n\n    const keyNumber = this.props.keyNumber;\n    const keyName = this.getKeyName(keyNumber);\n    const note = this.props.note;\n    const halfSteps = noteNumberToHalfSteps(keyNumber, this.props.selectedKeyNumber, selectedNoteSelection);\n    const interval = this.getInterval(halfSteps);\n\n    const label = () => {\n      switch(this.props.selectedLabel) {\n        case 'key':\n          return keyName;\n        case 'interval':\n          return interval;\n        case 'halfSteps':\n          return halfSteps;\n        default:\n          return '';\n      }\n    }\n   \n    \n\n    return (<div className={style.note}>\n          <Button color=\"default\"\n                  disableElevation\n                  variant={note.selected ? 'contained' : 'text'}\n                  onClick={event => this.handleNoteOnClick(!note.selected, keyNumber, this.props.selectedKeyNumber, noteSelections, this.props.selectedSelectionType)}\n                  className={`${style.button} ${note.selected ? style[halfSteps] : style.notSelected} ${this.props.keyColor ? style[this.props.keyColor] : ''}`}\n                  >\n                    {label()}\n          </Button>\n\t</div>)\n  }\n}\n\nNote.propTypes = {\n  note: PropTypes.object,\n  keyNumber: PropTypes.number,\n\tkeyColor: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  intervals: state.intervals,\n  selectedSelectionType: state.selectedSelectionType,\n  selectedLabel: state.selectedLabel,\n  selectedKeyNumber: state.selectedKeyNumber,\n  selectedChordName: state.selectedChordName,\n  selectedScaleName: state.selectedScaleName\n});\n\nconst mapDispatchToProps = {\n    toggleNote,\n    updateSelectedSelectionNameFromNotes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Note from 'components/partials/Note';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Guitar/Fret.module.scss';\n\n\nclass Fret extends Component {\n\n\tgetKeyNumber(fretNumber, tunerNumber){\n\t\treturn (fretNumber + tunerNumber) % 12;\n\t}\n\n  render() {\n    const keyNumber = this.getKeyNumber(this.props.fretNumber, this.props.tunerNumber);\n    const note = this.props.notes[keyNumber];\n\n    return (<div className={style.fret}>\n        <Note note={note} keyNumber={keyNumber} />\n      </div>)\n  }\n}\n\nFret.propTypes = {\n  fretNumber: PropTypes.number,\n  tunerNumber: PropTypes.number,\n  stringNumber: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n});\n\nexport default connect(mapStateToProps, null)(Fret);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// Components\nimport Fret from 'components/partials/instruments/Guitar/Fret';\n\n// Actions\nimport { updateTunerNumber, updateGuitarTuners} from 'actions/GuitarTunersActions';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Guitar.module.scss';\n\nclass Guitar extends Component {\n\n  handleTunerChange(stringNumber, tunerNumber){\n    this.props.updateTunerNumber(stringNumber, tunerNumber)\n  }\n  renderTunerElements(guitarTuners, notes){\n    return guitarTuners && guitarTuners.length\n      ? guitarTuners.map((tuner, stringNumber) => {\n        const optionElements = notes.map(note => {\n          return <MenuItem key={`noteNumber-${note.number}`} value={note.number}>{note.name}</MenuItem>\n        });\n        return (<div key={`${stringNumber}-${tuner.number}`} className={style.tuner}>\n          <Select value={tuner.number} className={style.tunerSelect} onChange={(event) => this.handleTunerChange(stringNumber, parseInt(event.target.value))}>\n            {optionElements}\n          </Select>\n          <div className={style.fret}>\n            <Fret fretNumber={0} tunerNumber={tuner.number} stringNumber={parseInt(stringNumber)} />\n          </div>\n        </div>)\n      })\n      : '';\n  }\n\n  renderFretNumbers(settingsGuitar){\n    const numberOfFrets = settingsGuitar && settingsGuitar.numberOfFrets ? settingsGuitar.numberOfFrets : null;\n    let fretNumbers = [];\n    if (numberOfFrets){\n      let fretNumber = 1;\n        while (fretNumber <= numberOfFrets){\n        fretNumbers.push(<div key={`fretNumber-${fretNumber}`} className={`${style.fret} ${style.fretnumber}`}>{fretNumber}</div>);\n        fretNumber++;\n      }\n    }\n    return fretNumbers;\n  }\n\n  renderFrets(settingsGuitar, tuner, stringNumber){\n    const numberOfFrets = settingsGuitar && settingsGuitar.numberOfFrets ? settingsGuitar.numberOfFrets : null;\n    let frets = [];\n    if (numberOfFrets){\n      let fretNumber = 1;\n        while (fretNumber <= numberOfFrets){\n        frets.push(<div key={`fret-${fretNumber}`} className={`${style.fret} ${fretNumber === 1 ? style.firstFret : ''}`}>\n          <Fret fretNumber={fretNumber} tunerNumber={tuner.number} stringNumber={stringNumber} />\n        </div>);\n        fretNumber++;\n      }\n    }\n    return frets;\n  }\n\n  renderGuitarNeck(settingsGuitar, guitarTuners){\n    return guitarTuners && guitarTuners.length\n      ? guitarTuners.map((tuner, stringNumber) => {\n          return (<div key={`${tuner.number}-${stringNumber}`} className={style.string}>{this.renderFrets(settingsGuitar, tuner, parseInt(stringNumber))}</div>)\n        })\n      : '';\n  }\n\n  render() {\n    return this.props.settingsGuitar && this.props.settingsGuitar.show\n      ? (<div id=\"guitar\" className={`${style.guitar} ${style.active}`}>\n  \t\t<div className={`${style.instrumentView} ${style.fretboard}`}>\n  \t\t\t<div className={style.tuners}>\n  \t\t\t\t<div className={`${style.fret} ${style.fretnumber}`}>\n  \t\t\t\t\tTuners\n  \t\t\t\t</div>\n          {this.renderTunerElements(this.props.guitarTuners, this.props.notes)}\n  \t\t\t</div>\n  \t\t\t<div className={style.frets}>\n          {this.renderFretNumbers(this.props.settingsGuitar)}\n          {this.renderGuitarNeck(this.props.settingsGuitar, this.props.guitarTuners)}\n  \t\t\t</div>\n  \t\t</div>\n  \t</div>) : ''\n  }\n}\n\nconst mapStateToProps = state => ({\n  settingsGuitar: state.settingsGuitar,\n  guitarTuners: state.guitarTuners,\n  notes: state.notes\n});\n\nconst mapDispatchToProps = {\n    updateTunerNumber,\n    updateGuitarTuners\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Guitar);\n","import {UPDATE_TUNER_NUMBER} from 'constants/types';\n\nexport const updateTunerNumber = (stringNumber, tunerNumber) => (dispatch, getState) => {\n  const guitarTuners = getState() && getState().guitarTuners;\n  let newGuitarTuners = [...guitarTuners];\n  newGuitarTuners[stringNumber].number = tunerNumber;\n  dispatch({type: UPDATE_TUNER_NUMBER, payload: newGuitarTuners})\n}\n\nexport const updateGuitarTuners = guitarTuners => dispatch => {\n  dispatch({type: UPDATE_TUNER_NUMBER, payload: guitarTuners})\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Note from 'components/partials/Note';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Keyboard/KeyboardKey.module.scss';\n\n\nclass KeyboardKey extends Component {\n\n\tgetKeyNumber(keyIndex, lowestNote){\n\t\treturn (keyIndex + lowestNote) % 12;\n\t}\n\n  render() {\n    const keyNumber = this.getKeyNumber(this.props.keyIndex, this.props.lowestNote);\n    const note = this.props.notes[keyNumber];\n    const keyColor = note.keycolor;\n\n    return (<div className={`${style.keyboardKey} ${style[keyColor]}`}>\n      <div className={style.keyName}>\n        <Note note={note} keyNumber={keyNumber} keyColor={keyColor} />\n      </div>\n      </div>)\n  }\n}\n\nKeyboardKey.propTypes = {\n  keyIndex: PropTypes.number,\n  lowestNote: PropTypes.number,\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes\n});\n\nexport default connect(mapStateToProps, null)(KeyboardKey);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Components\nimport KeyboardKey from 'components/partials/instruments/Keyboard/KeyboardKey';\n\n// Stylesheets\nimport style from 'components/partials/instruments/Keyboard.module.scss';\n\nclass Keyboard extends Component {\n  renderKeys(settingsKeyboard){\n    const numberOfKeys = settingsKeyboard && settingsKeyboard.numberOfKeys ? settingsKeyboard.numberOfKeys : 0;\n    const lowestNote = settingsKeyboard && settingsKeyboard.lowestNote ? settingsKeyboard.lowestNote : 0;\n    let keys = [];\n    if (numberOfKeys){\n      let keyIndex = 0;\n      while (keyIndex < numberOfKeys){\n        keys.push(<KeyboardKey key={`key-${keyIndex}`} keyIndex={keyIndex} lowestNote={lowestNote} />);\n        keyIndex++;\n      }\n    }\n    return keys;\n  }\n\n  render() {\n    return this.props.settingsKeyboard && this.props.settingsKeyboard.show\n      ? (<div id=\"keyboard\" className={`${style.keyboard} ${style.active}`}>\n        {this.renderKeys(this.props.settingsKeyboard)}\n\t</div>) : ''\n  }\n}\n\nconst mapStateToProps = state => ({\n  settingsKeyboard: state.settingsKeyboard,\n  notes: state.notes\n});\n\nexport default connect(mapStateToProps, null)(Keyboard);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Components\nimport Guitar from 'components/partials/instruments/Guitar';\nimport Keyboard from 'components/partials/instruments/Keyboard';\n\n\nclass Home extends Component {\n\n    render() {\n        return (<div>\n            <Guitar />\n            <Keyboard />\n        </div>)\n    }\n}\n\nexport default connect(null, null)(Home);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass NotFound extends Component {\n\n    render() {\n        return (<div>\n            <h1>404</h1>\n            <p>Siden finnes ikke</p>\n        </div>)\n    }\n}\n\nexport default connect(null, null)(NotFound);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material UI\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n// Actions\nimport { updateSelectedKeyNumber } from 'actions/SelectedKeyNumberActions';\nimport { updateSelectedChordName, updateSelectedScaleName, updateSelectedSelectionSelectList } from 'actions/SelectedSelectionNameActions';\nimport { updateComputerKeyboardInputEnabled } from 'actions/ComputerKeyboardInputEnabledActions';\n\n// Stylesheets\nimport style from 'components/partials/Selection.module.scss';\n\nclass Selection extends Component {\n\n  handleKeyChange(keyNumber) {\n    this.props.updateSelectedSelectionSelectList(\n      this.props.notes,\n      keyNumber,\n      this.props.selectedSelectionType === 'scale' ? this.props.selectedScaleName : this.props.selectedChordName,\n      this.props.selectedSelectionType === 'scale' ? this.props.scales : this.props.chords,\n      'key'\n    );\n  }\n\n  handleChordChange(chordName) {\n    this.props.updateSelectedSelectionSelectList(\n      this.props.notes,\n      this.props.selectedKeyNumber,\n      chordName,\n      this.props.chords,\n      'chord'\n    );\n  }\n\n  handleScaleChange(scaleName) {\n    this.props.updateSelectedSelectionSelectList(\n      this.props.notes,\n      this.props.selectedKeyNumber,\n      scaleName,\n      this.props.scales,\n      'scale'\n    );\n  }\n\n  renderKeyOptions(notes) {\n    return notes.map(note => {\n      return <MenuItem value={note.number} key={note.number}>{note.name}</MenuItem>;\n    })\n  }\n\n  renderChordOptions(chords) {\n    return Object.keys(chords).map(chordName => {\n      return <MenuItem key={chordName} value={chordName}>{chordName}</MenuItem>;\n    })\n  }\n\n  renderScaleOptions(scales) {\n    return Object.keys(scales).map(scaleName => {\n      return <MenuItem key={scaleName} value={scaleName}>{scaleName}</MenuItem>;\n    })\n  }\n\n\n  render() {\n    return (\n      <div className={style.selection}>\n        <FormControl className={style.formControl}>\n          <InputLabel id=\"key-select-label\">Key</InputLabel>\n          <Select className={style.select} labelId=\"key-select-label\" id=\"key-select\" value={this.props.selectedKeyNumber} onChange={event => this.handleKeyChange(parseInt(event.target.value))}>\n            {this.renderKeyOptions(this.props.notes)}\n          </Select>\n        </FormControl>\n        {\n          this.props.selectedSelectionType === 'chord'\n            ? (<FormControl className={`${style.formControl} ${style.wide}`}>\n              <Autocomplete\n                id=\"chord-select\"\n                value={this.props.selectedChordName}\n                onChange={(event, newValue) => this.handleChordChange(newValue)}\n                onFocus={() => this.props.updateComputerKeyboardInputEnabled(false)}\n                onBlur={() => this.props.updateComputerKeyboardInputEnabled(true)}\n                className={style.select}\n                options={Object.keys(this.props.chords)}\n                renderInput={(params) => <TextField {...params} label=\"Chord\" className={style.input} />}\n              />\n\n\n            </FormControl>)\n            : (<FormControl className={`${style.formControl} ${style.wide}`}>\n              <Autocomplete\n                id=\"scale-select\"\n                value={this.props.selectedScaleName}\n                onChange={(event, newValue) => this.handleScaleChange(newValue)}\n                onFocus={() => this.props.updateComputerKeyboardInputEnabled(false)}\n                onBlur={() => this.props.updateComputerKeyboardInputEnabled(true)}\n                className={style.select}\n                options={Object.keys(this.props.scales)}\n                renderInput={(params) => <TextField {...params} label=\"Scale\" className={style.input} />}\n              />\n            </FormControl>)\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  selectedKeyNumber: state.selectedKeyNumber,\n  selectedChordName: state.selectedChordName,\n  selectedScaleName: state.selectedScaleName,\n  selectedSelectionType: state.selectedSelectionType\n});\n\nconst mapDispatchToProps = {\n  updateSelectedKeyNumber,\n  updateSelectedChordName,\n  updateSelectedScaleName,\n  updateSelectedSelectionSelectList,\n  updateComputerKeyboardInputEnabled\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import {UPDATE_SELECTED_KEY_NUMBER} from 'constants/types';\n\nexport const updateSelectedKeyNumber = selectedKeyNumber => dispatch => {\n  dispatch({type: UPDATE_SELECTED_KEY_NUMBER, payload: selectedKeyNumber})\n}\n","import { UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED } from 'constants/types';\n\nexport const updateComputerKeyboardInputEnabled = enabled => dispatch => {\n    dispatch({ type: UPDATE_COMPUTER_KEYBOARD_INPUT_ENABLED, payload: enabled })\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\n\n\n// Actions\nimport {updateSelectedSelectionType} from 'actions/SelectedSelectionTypeActions';\nimport {updateSelectedLabel} from 'actions/SelectedLabelActions';\nimport {updateSettingsGuitar} from 'actions/SettingsGuitarActions';\nimport {updateSettingsKeyboard} from 'actions/SettingsKeyboardActions';\n\n// Stylesheets\nimport style from 'components/partials/Options.module.scss';\n\nclass Options extends Component {\n\n  handleSelectionTypeChange(selectionType){\n    this.props.updateSelectedSelectionType(selectionType);\n  }\n\n  handleLabelChange(label){\n    this.props.updateSelectedLabel(label);\n  }\n\n  handleToggleGuitar(show){\n    const newSettingsGuitar = {...this.props.settingsGuitar};\n    newSettingsGuitar.show = show;\n    this.props.updateSettingsGuitar(newSettingsGuitar)\n  }\n\n  handleNumberOfFretsChange(numberOfFrets){\n    const newSettingsGuitar = {...this.props.settingsGuitar};\n    newSettingsGuitar.numberOfFrets = numberOfFrets;\n    this.props.updateSettingsGuitar(newSettingsGuitar)\n  }\n\n  handleToggleKeyboard(show){\n    const newSettingsKeyboard = {...this.props.settingsKeyboard};\n    newSettingsKeyboard.show = show;\n    this.props.updateSettingsKeyboard(newSettingsKeyboard)\n  }\n\n  handleNumberOfKeysChange(numberOfKeys){\n    const newSettingsKeyboard = {...this.props.settingsKeyboard};\n    newSettingsKeyboard.numberOfKeys = numberOfKeys;\n    this.props.updateSettingsKeyboard(newSettingsKeyboard)\n  }\n\n  handleLowestNoteChange(lowestNote){\n    const newSettingsKeyboard = {...this.props.settingsKeyboard};\n    newSettingsKeyboard.lowestNote = lowestNote;\n    this.props.updateSettingsKeyboard(newSettingsKeyboard)\n  }\n\n  renderSelectionTypeOptions(selectionTypes){\n    return selectionTypes.map(selectionType => {\n      return <MenuItem key={selectionType.value} value={selectionType.value}>{selectionType.label}</MenuItem>;\n    })\n  }\n\n  renderLabelOptions(labels){\n    return labels.map(label => {\n      return <MenuItem key={label.value} value={label.value}>{label.label}</MenuItem>;\n    })\n  }\n\n  renderLowestNoteOptions(notes){\n    return notes.map(note => {\n      return <MenuItem key={note.number} value={note.number}>{note.name}</MenuItem>;\n    })\n  }\n\n  render() {\n    return (<React.Fragment>\n      <List subheader={<ListSubheader>Settings</ListSubheader>} className={style.options}>\n        <ListItem>\n          <FormControl fullWidth>\n            <InputLabel id=\"selection-type-select-label\">Selection type</InputLabel>\n            <Select labelId=\"selection-type-select-label\" id=\"selection-type-select\" value={this.props.selectedSelectionType} onChange={event => this.handleSelectionTypeChange(event.target.value)}>\n            {this.renderSelectionTypeOptions(this.props.selectionTypes)}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl fullWidth>\n            <InputLabel id=\"label-select-label\">Label</InputLabel>\n            <Select labelId=\"label-select-label\" id=\"label-select\" value={this.props.selectedLabel} onChange={event => this.handleLabelChange(event.target.value)}>\n            {this.renderLabelOptions(this.props.labels)}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem>\n          <ListItemText id=\"switch-list-label-guitar\" primary=\"Guitar\" />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={event => this.handleToggleGuitar(event.target.checked)}\n              checked={this.props.settingsGuitar.show}\n              color=\"primary\"\n              inputProps={{ 'aria-labelledby': 'switch-list-label-guitar' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={this.props.settingsGuitar.show} timeout=\"auto\" unmountOnExit>\n          <List>\n            <ListItem>\n              <TextField value={this.props.settingsGuitar.numberOfFrets} onChange={event => this.handleNumberOfFretsChange(event.target.value)} fullWidth id=\"number-of-frets\" label=\"Number of frets\" type=\"number\" inputProps={{min: 0, max: 50}} InputLabelProps={{shrink: true}} />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n      <Divider />\n      <List>\n        <ListItem>\n          <ListItemText id=\"switch-list-label-keyboard\" primary=\"Keyboard\" />\n          <ListItemSecondaryAction>\n            <Switch\n              edge=\"end\"\n              onChange={event => this.handleToggleKeyboard(event.target.checked)}\n              checked={this.props.settingsKeyboard.show}\n              color=\"primary\"\n              inputProps={{ 'aria-labelledby': 'switch-list-label-keyboard' }}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={this.props.settingsKeyboard.show} timeout=\"auto\" unmountOnExit>\n          <List>\n            <ListItem>\n              <TextField value={this.props.settingsKeyboard.numberOfKeys} onChange={event => this.handleNumberOfKeysChange(event.target.value)} fullWidth id=\"number-of-keys\" label=\"Number of keys\" type=\"number\" inputProps={{min: 0, max: 120}} InputLabelProps={{shrink: true}} />\n            </ListItem>\n            <ListItem>\n              <FormControl fullWidth>\n                <InputLabel id=\"lowestNote-select-label\">Lowest note</InputLabel>\n                <Select labelId=\"lowestNote-select-label\" id=\"lowestNote-select\" value={this.props.settingsKeyboard.lowestNote} onChange={event => this.handleLowestNoteChange(event.target.value)}>\n                {this.renderLowestNoteOptions(this.props.notes)}\n                </Select>\n              </FormControl>\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    </React.Fragment>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectionTypes: state.selectionTypes,\n  labels: state.labels,\n  scales: state.scales,\n  notes: state.notes,\n  selectedSelectionType: state.selectedSelectionType,\n  selectedLabel: state.selectedLabel,\n  settingsGuitar: state.settingsGuitar,\n  settingsKeyboard: state.settingsKeyboard\n});\n\nconst mapDispatchToProps = {\n  updateSelectedSelectionType,\n  updateSelectedLabel,\n  updateSettingsGuitar,\n  updateSettingsKeyboard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import {UPDATE_SELECTED_SELECTION_TYPE} from 'constants/types';\n\nexport const updateSelectedSelectionType = selectionType => dispatch => {\n  dispatch({type: UPDATE_SELECTED_SELECTION_TYPE, payload: selectionType})\n}\n","import {UPDATE_SELECTED_LABEL} from 'constants/types';\n\nexport const updateSelectedLabel = label => dispatch => {\n  dispatch({type: UPDATE_SELECTED_LABEL, payload: label})\n}\n","import {UPDATE_SETTINGS_GUITAR} from 'constants/types';\n\nexport const updateSettingsGuitar = settingsGuitar => dispatch => {\n  dispatch({type: UPDATE_SETTINGS_GUITAR, payload: settingsGuitar})\n}\n","import {UPDATE_SETTINGS_KEYBOARD} from 'constants/types';\n\nexport const updateSettingsKeyboard = settingsKeyboard => dispatch => {\n  dispatch({type: UPDATE_SETTINGS_KEYBOARD, payload: settingsKeyboard})\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material UI\nimport Badge from '@material-ui/core/Badge';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\n\n// Actions\nimport {updateSelectedSelectionFromAlternativeSelectionList} from 'actions/SelectedSelectionNameActions';\n\n// Stylesheets\nimport style from 'components/partials/AlternativeSelections.module.scss';\n\nclass AlternativeSelections extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListOpen: false,\n      anchorEl: null,\n      showSnackbar: false,\n      listId: 'alternativeSelectionsList'\n    };\n    this.handleListOpen = this.handleListOpen.bind(this);\n    this.handleListClose = this.handleListClose.bind(this);\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const hasAlternativeSelections = this.props.alternativeSelections.length;\n    const hadAlternativeSelections = prevProps.alternativeSelections.length;\n    if (hasAlternativeSelections !== hadAlternativeSelections) {\n      if (hasAlternativeSelections) {\n        this.setState({showSnackbar: true});\n      } else {\n        this.setState({showSnackbar: false});\n      }\n    }\n  }\n\n  setAnchorEl(element){\n    this.setState({\n      anchorEl: element,\n      isListOpen: element ? true : false\n    });\n  }\n\n  handleListOpen(event) {\n    this.setAnchorEl(event.currentTarget);\n  }\n\n  handleListClose() {\n    this.setAnchorEl(null);\n  }\n\n  handleSnackbarClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({showSnackbar: false});\n  };\n\n  handleListMenuItemClick(alternativeSelections, selection, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes){\n    this.handleListClose();\n    this.props.updateSelectedSelectionFromAlternativeSelectionList(alternativeSelections, selection, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes);\n  }\n\n  renderAlternativeSelectionsListItems(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes){\n    return alternativeSelections.map(selection => {\n      return (<MenuItem\n                key={`${selection.note.name}${selection.selectionName}`}\n                onClick={() => this.handleListMenuItemClick(alternativeSelections, selection, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes)}>\n                {selection.note.name} {selection.selectionName}\n             </MenuItem>)\n    })\n  }\n\n  renderAlternativeSelectionsList(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes){\n    return (\n      <Menu\n        anchorEl={this.state.anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        id={this.state.listId}\n        getContentAnchorEl={null}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={this.state.isListOpen}\n        onClose={this.handleListClose}\n        >\n        {\n          alternativeSelections.length\n            ? this.renderAlternativeSelectionsListItems(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes)\n            : (\n              <MenuItem>\n                No alternative {selectedSelectionType}s available\n              </MenuItem>\n            )\n        }\n      </Menu>\n    );\n  }\n\n  render() {\n    const alternativeSelections = this.props.alternativeSelections;\n    const selectedSelectionType = this.props.selectedSelectionType;\n    const selectedKeyNumber = this.props.selectedKeyNumber;\n    const selectedSelectionName = selectedSelectionType === 'scale' ? this.props.selectedScaleName : this.props.selectedChordName;\n    const noteSelections = selectedSelectionType === 'scale' ? this.props.scales : this.props.chords;\n    const notes = this.props.notes;\n\n    return (<div className={style.alternativeSelection}>\n\n      <IconButton aria-label=\"Show more\"\n                  aria-controls={this.state.listId}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleListOpen}\n                  color=\"inherit\">\n        <Badge badgeContent={alternativeSelections.length} overlap=\"rectangular\" color=\"primary\">\n          <QueueMusicIcon fontSize=\"medium\"/>\n        </Badge>\n      </IconButton>\n      <Snackbar anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n        open={this.state.showSnackbar}\n        autoHideDuration={6000}\n        onClose={this.handleSnackbarClose}\n        message={\n          <div className={style.snackbarMessage}>\n            <QueueMusicIcon size=\"small\"/>\n            {alternativeSelections.length} alternative {selectedSelectionType}{alternativeSelections.length === 1 ? '' : 's'} available\n          </div>}\n        action={\n            <React.Fragment>\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleSnackbarClose}>\n                <CloseIcon fontSize=\"small\"/>\n              </IconButton>\n            </React.Fragment>}\n    />\n      {this.renderAlternativeSelectionsList(alternativeSelections, selectedSelectionType, selectedKeyNumber, selectedSelectionName, noteSelections, notes)}\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  selectedKeyNumber: state.selectedKeyNumber,\n  selectedChordName: state.selectedChordName,\n  selectedScaleName: state.selectedScaleName,\n  selectedSelectionType: state.selectedSelectionType,\n  alternativeSelections: state.alternativeSelections\n});\n\nconst mapDispatchToProps = {\n  updateSelectedSelectionFromAlternativeSelectionList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlternativeSelections);\n","export default __webpack_public_path__ + \"static/media/flowchord-logo-white.2e1b96e5.svg\";","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Material-UI\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\n// Components\nimport Selection from 'components/partials/Selection';\nimport Options from 'components/partials/Options';\nimport AlternativeSelections from 'components/partials/AlternativeSelections';\n\n// Assets\nimport FlowChordLogo from 'assets/svg/flowchord-logo-white.svg';\n\n// Stylesheets\nimport style from 'components/partials/MainAppBar.module.scss';\n\nclass MainAppBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDrawerOpen: false\n    };\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({isDrawerOpen: true});\n  };\n  handleDrawerClose() {\n    this.setState({isDrawerOpen: false});\n  };\n\n  render() {\n    return (<React.Fragment>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Open drawer\" onClick={this.handleDrawerOpen}>\n            <MenuIcon/>\n          </IconButton>\n          <img src={FlowChordLogo} alt=\"FlowChord logo\" className={style.appBarLogo} />\n          <Selection/>\n          <AlternativeSelections />\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer anchor='left' open={this.state.isDrawerOpen} onClose={this.handleDrawerClose} onOpen={this.handleDrawerOpen}>\n        <div>\n          <IconButton onClick={this.handleDrawerClose}>\n            <ChevronLeftIcon/>\n          </IconButton>\n        </div>\n        <Divider/>\n        <Options/>\n      </SwipeableDrawer>\n    </React.Fragment>);\n  }\n}\n\n\n\nexport default connect(null, null)(MainAppBar);\n","export default __webpack_public_path__ + \"static/media/flowchord-logo-gray-vertical.c53b6bac.svg\";","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Assets\nimport FlowChordLogo from 'assets/svg/flowchord-logo-gray-vertical.svg';\n\n// Stylesheets\nimport style from 'components/partials/Footer.module.scss';\n\nclass Selection extends Component {\n  render() {\n    return (<div className={style.footer}>\n      <div className={style.logo}>\n        <img src={FlowChordLogo} alt=\"FlowChord logo\" />\n      </div>\n      <div className={style.text}>\n        <p>FlowChord licensed under <a href=\"https://github.com/flowgig/FlowChord/blob/master/LICENSE\">GNU General Public License</a></p>\n      </div>\n    </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","// Dependencies\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Tone from 'tone';\n\n// Material UI\nimport Fab from '@material-ui/core/Fab';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\n// Helpers\nimport { getNoteByNoteNumber } from 'helpers/noteHelpers';\n\n\nclass Synthesizer extends Component {\n  constructor(props) {\n    super(props);\n    this.playSelection = this.playSelection.bind(this);\n  }\n\n  getSelectedNotesTriggerNames(halfSteps, selectedKeyNumber, notes) {\n    return halfSteps.map(halfStep => {\n      const rootOctave = selectedKeyNumber > 5 ? 3 : 4;\n      const relativeHalfStep = selectedKeyNumber + halfStep;\n      const octave = parseInt(relativeHalfStep / 12) + rootOctave;\n      const noteNumber = relativeHalfStep % 12;\n      const note = getNoteByNoteNumber(notes, noteNumber);\n      return `${note.name}${octave}`;\n    })\n  };\n\n  playSelection() {\n    const synthesizer = this.props.synthesizer;\n    const notes = this.props.notes;\n    const selectedSelections = this.props.selectedSelectionType === 'scale' ? this.props.scales : this.props.chords;\n    const selectedSelectionName = this.props.selectedSelectionType === 'scale' ? this.props.selectedScaleName : this.props.selectedChordName;\n    if (selectedSelectionName) {\n      const selectedSelection = selectedSelections[selectedSelectionName];\n      const selectedHalfSteps = selectedSelection.halfSteps;\n      const selectedNotesTriggerNames = this.getSelectedNotesTriggerNames(selectedHalfSteps, this.props.selectedKeyNumber, notes);\n      const now = Tone.now()\n\n      if (this.props.selectedSelectionType === 'chord') {\n        // Trigger simultaneously\n        synthesizer.triggerAttackRelease(selectedNotesTriggerNames, 0.5);\n        // Trigger consecutively\n        selectedNotesTriggerNames.forEach((selectedNotesTriggerName, index) => {\n          const noteLength = 0.25;\n          const noteStart = now + 0.75 + 0.25 * index;\n          synthesizer.triggerAttackRelease(selectedNotesTriggerName, noteLength, noteStart);\n        })\n      } else if (this.props.selectedSelectionType === 'scale') {\n        // Trigger consecutively\n        selectedNotesTriggerNames.forEach((selectedNotesTriggerName, index) => {\n          const noteLength = 0.25;\n          const noteStart = now + 0.25 * index;\n          synthesizer.triggerAttackRelease(selectedNotesTriggerName, noteLength, noteStart);\n        })\n      }\n\n    }\n\n  }\n\n  render() {\n    return (\n      <Fab color=\"primary\" aria-label={`Listen to ${this.props.selectedSelectionType}`} onClick={this.playSelection}>\n        <PlayArrowIcon />\n      </Fab>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  selectedChordName: state.selectedChordName,\n  selectedScaleName: state.selectedScaleName,\n  selectedKeyNumber: state.selectedKeyNumber,\n  selectedSelectionType: state.selectedSelectionType,\n  synthesizer: state.synthesizer\n});\n\n\nexport default connect(mapStateToProps, null)(Synthesizer);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// OutputAudio\nimport Synthesizer from 'components/outputAudio/Synthesizer';\n\n// Stylesheets\nimport style from 'components/partials/FloatingActionButtons.module.scss';\n\nclass FloatingActionButtons extends Component {\n    render() {\n        return (<div className={style.floatingActionButtons}>\n            <Synthesizer />\n        </div>)\n    }\n}\n\n\n\nexport default connect(null, null)(FloatingActionButtons);\n","// Dependencies\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Actions\nimport {toggleNote} from 'actions/NotesActions';\nimport {updateSelectedSelectionNameFromNotes} from 'actions/SelectedSelectionNameActions';\n\n// Helpers\nimport {getNoteByNoteNumber} from 'helpers/noteHelpers';\n\n\nclass ComputerKeyboardInput extends Component {\n  constructor(props) {\n    super(props);\n    this.keyDownFunction = this.keyDownFunction.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyDownFunction, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyDownFunction, false);\n  }\n\n  handleNoteToggle(checked, noteNumber, selectedKeyNumber, noteSelections, selectedSelectionType) {\n    const newNotes = this.props.toggleNote(noteNumber, checked);\n    this.props.updateSelectedSelectionNameFromNotes(newNotes, selectedKeyNumber, noteSelections, selectedSelectionType);\n  }\n\n  keyDownFunction(event) {\n    if (!this.props.computerKeyboardInputEnabled){\n      return false;\n    }\n    const keyNumber = this.props.keyCodeNoteNumbers[event.keyCode];\n    if(typeof keyNumber === 'number'){\n      const note = getNoteByNoteNumber(this.props.notes, keyNumber);\n      const noteSelections = this.props.selectedSelectionType === 'scale'\n        ? this.props.scales\n        : this.props.chords;\n      this.handleNoteToggle(!note.selected, keyNumber, this.props.selectedKeyNumber, noteSelections, this.props.selectedSelectionType)\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes,\n  chords: state.chords,\n  scales: state.scales,\n  selectedSelectionType: state.selectedSelectionType,\n  selectedKeyNumber: state.selectedKeyNumber,\n  keyCodeNoteNumbers: state.keyCodeNoteNumbers,\n  computerKeyboardInputEnabled: state.computerKeyboardInputEnabled\n});\n\nconst mapDispatchToProps = {\n  toggleNote,\n  updateSelectedSelectionNameFromNotes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComputerKeyboardInput);\n","import { createTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#C32A22',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    background: {\n      default: '#fff',\n    }\n  },\n  overrides: {\n    MuiAppBar: { // Name of the component ⚛️ / style sheet\n      colorPrimary: { // Name of the rule\n         backgroundColor: '#272b2f', // Some CSS\n      },\n    },\n  },\n});\n\nexport default theme;\n","// Dependecies\nimport React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport {Route, Switch} from 'react-router';\nimport {ConnectedRouter} from 'connected-react-router';\nimport WebFont from 'webfontloader';\nimport { ThemeProvider } from '@material-ui/styles';\n\n// Material UI\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\n// Utils\nimport configureStore, {history} from 'utils/configureStore';\n\n// Routes\nimport Home from 'components/routes/Home';\nimport NotFound from 'components/routes/NotFound';\n\n// Partials\nimport MainAppBar from 'components/partials/MainAppBar';\nimport Footer from 'components/partials/Footer';\nimport FloatingActionButtons from 'components/partials/FloatingActionButtons';\n\n// InputControllers\nimport ComputerKeyboardInput from 'components/inputControllers/ComputerKeyboardInput';\n\n// Stylesheets\nimport style from 'App.module.scss';\nimport theme from 'theme';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:400,700&display=swap']\n  }\n});\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <ConnectedRouter history={history}>\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <ComputerKeyboardInput />\n          <MainAppBar />\n          <div className={style.app}>\n            <Switch>\n              <Route exact={true} path=\"/\" render={(props) => (<Home {...props}/>)}/>\n              <Route exact={true} path=\"/FlowChord\" render={(props) => (<Home {...props}/>)}/>\n              <Route render={() => (<NotFound/>)}/>\n            </Switch>\n            <Footer />\n            <FloatingActionButtons />\n          </div>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guitar\":\"Guitar_guitar__1IXuD\",\"fretboard\":\"Guitar_fretboard__3kbmp\",\"tuners\":\"Guitar_tuners__HuulZ\",\"fretnumber\":\"Guitar_fretnumber__3qvBu\",\"tuner\":\"Guitar_tuner__3uDIU\",\"fret\":\"Guitar_fret__rN2Qx\",\"tunerSelect\":\"Guitar_tunerSelect__2Otl5\",\"selectListIcon\":\"Guitar_selectListIcon__3yd69\",\"frets\":\"Guitar_frets__1Q1Sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selection\":\"Selection_selection__7gHr9\",\"formControl\":\"Selection_formControl__2zfkm\",\"wide\":\"Selection_wide__1MmiM\",\"select\":\"Selection_select__27ja9\",\"input\":\"Selection_input__2LowK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"0\":\"Note_0__1SIbH\",\"1\":\"Note_1__3apnE\",\"2\":\"Note_2__2oAGg\",\"3\":\"Note_3__1WD4C\",\"4\":\"Note_4__2aCML\",\"5\":\"Note_5__3K9i6\",\"6\":\"Note_6__2UrWD\",\"7\":\"Note_7__2R1Y9\",\"8\":\"Note_8__226tt\",\"9\":\"Note_9__1MnDw\",\"10\":\"Note_10__UvCa8\",\"11\":\"Note_11__2zsoD\",\"12\":\"Note_12__2DTu1\",\"13\":\"Note_13__3L-EM\",\"14\":\"Note_14__3Z5_R\",\"15\":\"Note_15__WdrOT\",\"16\":\"Note_16__OSLae\",\"17\":\"Note_17__HehTw\",\"18\":\"Note_18__1pAOw\",\"19\":\"Note_19__26uQg\",\"20\":\"Note_20__2yL74\",\"21\":\"Note_21__4eiX9\",\"22\":\"Note_22__2to1l\",\"23\":\"Note_23__1UnRW\",\"24\":\"Note_24__5BUpZ\",\"25\":\"Note_25__I6jNM\",\"26\":\"Note_26__21aKH\",\"27\":\"Note_27__3L2T9\",\"28\":\"Note_28__RUfJ8\",\"29\":\"Note_29__9pYX0\",\"30\":\"Note_30__3RfWO\",\"31\":\"Note_31__3qSXf\",\"32\":\"Note_32__2gj1X\",\"33\":\"Note_33__4WdJr\",\"note\":\"Note_note__1E7Sj\",\"button\":\"Note_button__2P0Iv\",\"notSelected\":\"Note_notSelected__6XZbI\",\"black\":\"Note_black__18s5g\",\"white\":\"Note_white__1RKUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboardKey\":\"KeyboardKey_keyboardKey__2DuOU\",\"white\":\"KeyboardKey_white__2SzWr\",\"keyName\":\"KeyboardKey_keyName__3PnLx\",\"black\":\"KeyboardKey_black__2Jtum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1Gz8h\",\"logo\":\"Footer_logo__duocE\",\"text\":\"Footer_text__3T4nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboard\":\"Keyboard_keyboard__1IWMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alternativeSelection\":\"AlternativeSelections_alternativeSelection__2LFg4\",\"selectionListMessage\":\"AlternativeSelections_selectionListMessage__2FBfS\",\"snackbarMessage\":\"AlternativeSelections_snackbarMessage__2OD8P\"};"],"sourceRoot":""}